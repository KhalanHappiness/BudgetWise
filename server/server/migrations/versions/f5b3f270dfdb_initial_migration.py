"""Initial migration

Revision ID: f5b3f270dfdb
Revises: 
Create Date: 2025-06-26 09:07:25.152795

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f5b3f270dfdb'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('is_demo_user', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('bills',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('category', sa.String(length=100), nullable=False),
    sa.Column('due_date', sa.Date(), nullable=False),
    sa.Column('recurring_type', sa.Enum('weekly', 'monthly', 'yearly', 'one-time', name='recurring_types'), nullable=True),
    sa.Column('paid_date', sa.Date(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_bills_user_id_users')),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('bills', schema=None) as batch_op:
        batch_op.create_index('idx_user_due_date', ['user_id', 'due_date'], unique=False)

    op.create_table('budgets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('budgeted_amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], name=op.f('fk_budgets_category_id_categories')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_budgets_user_id_users')),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'category_id', name='unique_budget_category_user')
    )
    op.create_table('expenses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=False),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('expense_date', sa.Date(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], name=op.f('fk_expenses_category_id_categories')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_expenses_user_id_users')),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('expenses', schema=None) as batch_op:
        batch_op.create_index('idx_user_category', ['user_id', 'category_id'], unique=False)
        batch_op.create_index('idx_user_date', ['user_id', 'expense_date'], unique=False)

    op.create_table('reminders',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('reminder_type', sa.Enum('budget_alert', 'bill_due', 'custom', name='reminder_types'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('dismissed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_reminders_user_id_users')),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('reminders', schema=None) as batch_op:
        batch_op.create_index('idx_user_active', ['user_id', 'is_active'], unique=False)

    op.create_table('bill_payments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('bill_id', sa.Integer(), nullable=True),
    sa.Column('bill_name', sa.String(length=255), nullable=False),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('category', sa.String(length=100), nullable=False),
    sa.Column('original_due_date', sa.Date(), nullable=False),
    sa.Column('paid_date', sa.Date(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['bill_id'], ['bills.id'], name=op.f('fk_bill_payments_bill_id_bills'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_bill_payments_user_id_users')),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('bill_payments', schema=None) as batch_op:
        batch_op.create_index('idx_user_paid_date', ['user_id', 'paid_date'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('bill_payments', schema=None) as batch_op:
        batch_op.drop_index('idx_user_paid_date')

    op.drop_table('bill_payments')
    with op.batch_alter_table('reminders', schema=None) as batch_op:
        batch_op.drop_index('idx_user_active')

    op.drop_table('reminders')
    with op.batch_alter_table('expenses', schema=None) as batch_op:
        batch_op.drop_index('idx_user_date')
        batch_op.drop_index('idx_user_category')

    op.drop_table('expenses')
    op.drop_table('budgets')
    with op.batch_alter_table('bills', schema=None) as batch_op:
        batch_op.drop_index('idx_user_due_date')

    op.drop_table('bills')
    op.drop_table('users')
    op.drop_table('categories')
    # ### end Alembic commands ###
